name: CI (CPU smoke)

on:
  push:
  pull_request:

jobs:
  smoke:
    runs-on: ubuntu-latest
    env:
      OV_DEVICE: CPU
      SKIP_AUDIO: "1"
      PYTHONUNBUFFERED: "1"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Make tiny demo dataset
        run: |
          python - <<'PY'
          import os, json, pretty_midi as pm
          os.makedirs("data/raw/demo", exist_ok=True)
          # tiny scale midi
          m=pm.PrettyMIDI()
          inst=pm.Instrument(program=0)
          t=0.0
          for p in [60,62,64,65,67,69,71,72]:
            inst.notes.append(pm.Note(velocity=90,pitch=p,start=t,end=t+0.25)); t+=0.25
          m.instruments.append(inst)
          m.write("data/raw/demo/scale.mid")
          json.dump([{"name":"intro","start":0.0,"end":1.0},
                     {"name":"verse","start":1.0,"end":2.0}],
                    open("data/raw/demo/sections.json","w"))
          PY

      - name: Prepare dataset
        run: python src/training/prepare_dataset.py

      - name: Train (ultra light)
        run: python src/training/train_lm.py --config src/training/configs/ci.yaml

      - name: Export OpenVINO IR
        run: python src/export/export_ov.py --ckpt checkpoints/epoch1 --out exports/gpt_ov

      - name: Launch API (background)
        run: |
          python -m uvicorn src.api.server:app --host 127.0.0.1 --port 9009 &
          echo $! > uv.pid
          sleep 6

      - name: Hit /health
        run: curl -sSf http://127.0.0.1:9009/health | tee health.json

      - name: Hit /v1/midi/compose_full
        run: |
          jq -n '{
            base_style:"rock", bpm:120, key:"C",
            sections:[{name:"intro",duration:2},{name:"verse",duration:2}],
            seed:1, with_vocal:false, max_tokens:64
          }' > body.json
          curl -sSf -H "Content-Type: application/json" \
            --data @body.json http://127.0.0.1:9009/v1/midi/compose_full | tee out.json
          test $(jq -r '.format' out.json) = "wav"

      - name: Stop API
        if: always()
        run: kill $(cat uv.pid) || true
